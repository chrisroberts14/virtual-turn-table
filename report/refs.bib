@article{5222784,
  author   = {Dyba, Tore and Dingsoyr, Torgeir},
  journal  = {IEEE Software},
  title    = {What Do We Know about Agile Software Development?},
  year     = {2009},
  volume   = {26},
  number   = {5},
  pages    = {6-9},
  keywords = {Programming;Collaborative software;Humans;Social factors;Software development management;ISO standards;Communication system control;Environmental management;Innovation management;Application software;empirical software engineering;evidence-based software engineering;research synthesis;agile software development;XP;extreme programming;scrum;lean software development},
  doi      = {10.1109/MS.2009.145}
}

@inproceedings{6822300,
  author    = {Taherdoost, Hamed and Sahibuddin, Shamsul and Jalaliyoon, Neda},
  booktitle = {2014 International Conference on Computational Science and Computational Intelligence},
  title     = {Perceived Barriers and Benefits of Web Based Services},
  year      = {2014},
  volume    = {2},
  number    = {},
  pages     = {34-39},
  keywords  = {Consumer electronics;Customer satisfaction;Security;Education;Information technology;Companies;Web based serices;Electronic Services;SWOT;Barriers and Benefitss},
  doi       = {10.1109/CSCI.2014.91}
}

@inproceedings{9109514,
  author    = {Gos, Konrad and Zabierowski, Wojciech},
  booktitle = {2020 IEEE XVIth International Conference on the Perspective Technologies and Methods in MEMS Design (MEMSTECH)},
  title     = {The Comparison of Microservice and Monolithic Architecture},
  year      = {2020},
  volume    = {},
  number    = {},
  pages     = {150-153},
  keywords  = {Micromechanical devices;Java;Software architecture;Design methodology;Conferences;Computer architecture;Software;monolith;microservice;architecture;spring;java},
  doi       = {10.1109/MEMSTECH49584.2020.9109514}
}

@INPROCEEDINGS{9320801,
  author={Adam, Stenly Ibrahim and Moedjahedy, Jimmy H and Maramis, Jeremiah},
  booktitle={2020 2nd International Conference on Cybernetics and Intelligent System (ICORIS)},
  title={RESTful Web Service Implementation on Unklab Information System Using JSON Web Token (JWT)},
  year={2020},
  volume={},
  number={},
  pages={1-6},
  keywords={Databases;Web services;Web servers;Information systems;Software;Task analysis;Password;Student data;RESTful Web Service;Information System;JSON Web Token;API},
  doi={10.1109/ICORIS50180.2020.9320801}}

@article{andrei2019study,
  title     = {A study on using waterfall and agile methods in software project management},
  author    = {Andrei, Bogdan-Alexandru and Casu-Pop, Andrei-Cosmin and Gheorghe, Sorin-Catalin and Boiangiu, Costin-Anton},
  journal   = {Journal of Information Systems \& Operations Management},
  pages     = {125--135},
  year      = {2019},
  publisher = {Romanian-American University, Scientific Research Department}
}

@misc{BFF,
  author  = {Sam Newman},
  title   = {Pattern: Backends For Frontends},
  year    = 2015,
  url     = {https://samnewman.io/patterns/architectural/bff/},
  urldate = {2025-02-05}
}

@misc{BPI,
  author  = {{British Phonographic Industry (BPI)}},
  title   = {UK vinyl LP sales increase for a 16th consecutive year as the physical music market enjoys a strong 12 months},
  year    = 2023,
  url     = {https://www.bpi.co.uk/news-analysis/uk-vinyl-lp-sales-increase-for-a-16th-consecutive-year-as-the-physical-music-market-enjoys-a-strong-12-months},
  urldate = {2025-01-29}
}

@misc{DockerCompose,
  author  = {{Docker}},
  title   = {Docker Compose},
  url     = {https://docs.docker.com/compose/},
  urldate = {2025-02-26}
}

@misc{DockerDocs,
  author  = {{Docker}},
  title   = {Docker Documentation},
  url     = {https://docs.docker.com/},
  urldate = {2025-02-06}
}

@misc{FastAPI,
  author  = {{Sebastián Ramírez (tiangolo)}},
  title   = {FastAPI: Features},
  url     = {https://fastapi.tiangolo.com/features/#editor-support},
  urldate = {2025-02-06}
}

@misc{InstagramMonolith,
  author  = {{Instagram Engineering}},
  title   = {Python at Scale: Strict Modules},
  url     = {https://instagram-engineering.com/python-at-scale-strict-modules-c0bb9245c834},
  urldate = {2025-03-04}
}

@misc{NetflixMicroservices,
  author  = {{Netflix Technology Blog}},
  title   = {Rebuilding Netflix Video Processing Pipeline with Microservices},
  url     = {https://netflixtechblog.com/rebuilding-netflix-video-processing-pipeline-with-microservices-4e5e6310e359},
  urldate = {2025-03-04}
}

@inproceedings{Gaillard2017LargeSR,
  title     = {Large scale reverse image search - A method comparison for almost identical image retrieval},
  author    = {Mathieu Gaillard and El{\"o}d Egyed-Zsigmond},
  booktitle = {INFORSID},
  year      = {2017},
  url       = {https://api.semanticscholar.org/CorpusID:27648067}
}

@article{GANESHCHANDRA201513,
title = {BASE analysis of NoSQL database},
journal = {Future Generation Computer Systems},
volume = {52},
pages = {13-21},
year = {2015},
note = {Special Section: Cloud Computing: Security, Privacy and Practice},
issn = {0167-739X},
doi = {https://doi.org/10.1016/j.future.2015.05.003},
url = {https://www.sciencedirect.com/science/article/pii/S0167739X15001788},
author = {Deka {Ganesh Chandra}},
keywords = {ACID, BASE, NoSQL, CAP theorem, Soft state},
abstract = {NoSQL databases are designed to address performance and scalability requirements of web based application which cannot be addressed by traditional relational databases. Due to their contrast in priorities and architecture to conventional relational databases using SQL, these databases are referred as “NoSQL” databases since they ​incorporate lots of additional features in addition to the features of conventional databases. The relational databases strongly follow the ACID (Atomicity, Consistency, Isolation, and Durability) properties while the NoSQL databases follow BASE (Basically Available, Soft State, Eventual consistency) principles. This survey paper is an analytical study on BASE features of some of NoSQL databases.}
}

@misc{GCP,
  author  = {{Google Cloud Platform}},
  title   = {Google Cloud Platform},
  url     = {https://cloud.google.com/},
  urldate = {2025-02-26}
}

@misc{IFPI,
  author  = {{International Federation of the Phonographic Industry (IFPI)}},
  title   = {IFPI Global Music Report 2024 State of the Industry},
  year    = 2024,
  url     = {https://ifpi-website-cms.s3.eu-west-2.amazonaws.com/IFPI_GMR_2024_State_of_the_Industry_db92a1c9c1.pdf},
  urldate = {2025-01-29}
}

@inproceedings{NoSQL,
author = {Pokorny, Jaroslav},
title = {NoSQL databases: a step to database scalability in web environment},
year = {2011},
isbn = {9781450307840},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2095536.2095583},
doi = {10.1145/2095536.2095583},
abstract = {The paper is focused on so called NoSQL databases. In context of cloud computing, architectures and basic features of these databases are studied, particularly their horizontal scalability and concurrency model, that is mostly weaker than ACID transactions in relational SQL-like database systems. Some characteristics like a data model and querying capabilities are discussed in more detail. The paper also contains an overview of some representatives of NoSQL databases.},
booktitle = {Proceedings of the 13th International Conference on Information Integration and Web-Based Applications and Services},
pages = {278–283},
numpages = {6},
keywords = {weak consistency, vertical scaling, horizontal scaling, horizontal data distribution, cloud computing, NoSQL database, CAP theorem},
location = {Ho Chi Minh City, Vietnam},
series = {iiWAS '11}
}

@misc{React,
  author  = {{React Team}},
  title   = {React Reference},
  url     = {https://react.dev/reference/react},
  urldate = {2025-02-06}
}

@misc{Shneiderman,
  author  = {Ben Shneiderman},
  title   = {The Eight Golden Rules of Interface Design},
  year    = 2016,
  url     = {https://www.cs.umd.edu/users/ben/goldenrules.html},
  urldate = {2025-02-05}
}

@misc{SpotifyAPI,
  author  = {{Spotify}},
  title   = {Spotify Web API},
  url     = {https://developer.spotify.com/documentation/web-api/},
  urldate = {2025-02-26}
}

@misc{SpotifyOAuth,
  author  = {{Spotify}},
  title   = {Spotify OAuth},
  url     = {https://developer.spotify.com/documentation/web-api/concepts/authorization},
  urldate = {2025-03-17}
}

@misc{PyTest,
  author  = {{Pytest Team}},
  title   = {Pytest Docs},
  url     = {https://docs.pytest.org/en/stable/},
  urldate = {2025-03-02}
}

@misc{Vitest,
  author  = {{Vitest Team}},
  title   = {Vitest Docs},
  url     = {https://vitest.dev/guide/},
  urldate = {2025-03-02}
}


@misc{spotifyredirects,
  author  = {{Spotify}},
  title   = {Increasing the security requirements for integrating with Spotify},
  url     = {https://developer.spotify.com/blog/2025-02-12-increasing-the-security-requirements-for-integrating-with-spotify},
  urldate = {2025-02-26}
}

@incollection{WILSON1988859,
title = {Chapter 39 - Rapid Prototyping for User Interface Design},
editor = {MARTIN HELANDER},
booktitle = {Handbook of Human-Computer Interaction},
publisher = {North-Holland},
address = {Amsterdam},
pages = {859-875},
year = {1988},
isbn = {978-0-444-70536-5},
doi = {https://doi.org/10.1016/B978-0-444-70536-5.50044-0},
url = {https://www.sciencedirect.com/science/article/pii/B9780444705365500440},
author = {James Wilson and Daniel Rosenberg},
abstract = {39.1 Abstract
The present chapter provides an introduction to the rationale and techniques used for the rapid prototyping of the user interface (UI). It is intended primarily for those practitioners who are now known as “user interface designers” or “dialogue designers.” The reader will become familiar with the benefits to rapid prototyping, the role of prototyping in alternative development strategies, and the classes of prototyping techniques. First we review the major issues surrounding the integration of prototyping tools into the user interface design process. Both the nature of the products that can be simulated and the nature of the users applying the tools are explored. The remaining sections analyze the components of a prototyping tool. A complete prototyping system requires methods for specifying interface graphics as well as product logic. Support tools and embedded data collection test facilities can also be integrated to facilitate the testing process.}
}

@ARTICLE{7030212,
  author={Thönes, Johannes},
  journal={IEEE Software},
  title={Microservices},
  year={2015},
  volume={32},
  number={1},
  pages={116-116},
  keywords={Interviews;Software architecture;Service oriented architecture;Software engineering;architecture;enterprise service bus;http;microservice;service-oriented architecture;software engineering;SE Radio},
  doi={10.1109/MS.2015.11}}


@misc{AWSDocker,
  author  = {{AWS}},
  title   = {Containers At AWS},
  url     = {https://aws.amazon.com/containers/},
  urldate = {2025-07-02}
}

@misc{GoogleDocker,
  author  = {{Google Cloud}},
  title   = {Google Cloud Build},
  url     = {https://cloud.google.com/build/docs/overview},
  urldate = {2025-07-02}
}

@misc{SpotifyPlaybackSDK,
  author  = {{Spotify}},
  title   = {Spotify Web Playback SDK},
  url     = {https://developer.spotify.com/documentation/web-playback-sdk},
  urldate = {2025-07-02}
}

@misc{HeroUI,
  author  = {{Hero UI Team}},
  title   = {Hero UI},
  url     = {https://www.heroui.com/},
  urldate = {2025-14-03}
}

@ARTICLE{8354423,
  author={Larrucea, Xabier and Santamaria, Izaskun and Colomo-Palacios, Ricardo and Ebert, Christof},
  journal={IEEE Software},
  title={Microservices},
  year={2018},
  volume={35},
  number={3},
  pages={96-100},
  keywords={Software development;Service computing;Computer architecture;Browsers;Java;microservices;Cross-Origin Resource Sharing;CORS;software development;software engineering;Software Technology},
  doi={10.1109/MS.2018.2141030}}

@article{10.1145/320493.320489,
author = {Bernstein, Philip A.},
title = {Synthesizing third normal form relations from functional dependencies},
year = {1976},
issue_date = {Dec. 1976},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {1},
number = {4},
issn = {0362-5915},
url = {https://doi.org/10.1145/320493.320489},
doi = {10.1145/320493.320489},
abstract = {It has been proposed that the description of a relational database can be formulated as a set of functional relationships among database attributes. These functional relationships can then be used to synthesize algorithmically a relational scheme. It is the purpose of this paper to present an effective procedure for performing such a synthesis. The schema that results from this procedure is proved to be in Codd's third normal form and to contain the fewest possible number of relations. Problems with earlier attempts to construct such a procedure are also discussed.},
journal = {ACM Trans. Database Syst.},
month = dec,
pages = {277–298},
numpages = {22},
keywords = {third normal form, semantics of data, relational model, functional dependency, database schema}
}

@Inbook{Cano2005,
author="Cano, Pedro
and Batlle, Eloi
and G{\'o}mez, Emilia
and de C.T.Gomes, Leandro
and Bonnet, Madeleine",
title="Audio Fingerprinting: Concepts And Applications",
bookTitle="Computational Intelligence for Modelling and Prediction",
year="2005",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="233--245",
abstract="An audio fingerprint is a unique and compact digest derived from perceptually relevant aspects of a recording. Fingerprinting technologies allow the monitoring of audio content without the need of metadata or watermark embedding. However, additional uses exist for audio fingerprinting. This paper aims to give a vision on Audio Fingerprinting. The rationale is presented along with the differences with respect to watermarking. The main requirements of fingerprinting systems are described. The basic modes of employing audio fingerprints, namely identification, authentication, content-based secret key generation for watermarking and content-based audio retrieval and processing are depicted. Some concrete scenarios and business models where the technology is used are presented, as well as an example of an audio fingerprinting extraction algorithm which has been proposed for both identification and verification.",
isbn="978-3-540-32402-7",
doi="10.1007/10966518_17",
url="https://doi.org/10.1007/10966518_17"
}

@INPROCEEDINGS{5773404,
  author={Ikonen, Marko and Pirinen, Elena and Fagerholm, Fabian and Kettunen, Petri and Abrahamsson, Pekka},
  booktitle={2011 16th IEEE International Conference on Engineering of Complex Computer Systems},
  title={On the Impact of Kanban on Software Project Work: An Empirical Case Study Investigation},
  year={2011},
  volume={},
  number={},
  pages={305-314},
  keywords={Software;Programming;Visualization;Documentation;Interviews;Lead;Project management;software development;Kanban;project management;process model},
  doi={10.1109/ICECCS.2011.37}}


@article{agile_software_development,
author = {Cockburn, Alistair and Highsmith, Jim},
year = {2001},
month = {12},
pages = {131 - 133},
title = {Agile software development: The people factor},
volume = {34},
journal = {Computer},
doi = {10.1109/2.963450}
}

@inproceedings{10.1145/952532.952753,
author = {George, Boby and Williams, Laurie},
title = {An initial investigation of test driven development in industry},
year = {2003},
isbn = {1581136242},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/952532.952753},
doi = {10.1145/952532.952753},
abstract = {Test Driven Development (TDD) is a software development practice in which unit test cases are incrementally written prior to code implementation. In our research, we ran a set of structured experiments with 24 professional pair programmers. One group developed code using TDD while the other a waterfall-like approach. Both groups developed a small Java program. We found that the TDD developers produced higher quality code, which passed 18\% more functional black box test cases. However, TDD developer pairs took 16\% more time for development. A moderate correlation between time spent and the resulting quality was established upon analysis. It is conjectured that the resulting high quality of code written using the TDD practice may be due to the granularity of TDD, which may encourage more frequent and tighter verification and validation. Lastly, the programmers which followed a waterfall-like process often did not write the required automated test cases after completing their code, which might be indicative of the tendency among practitioners toward inadequate testing. This observation supports that TDD has the potential of increasing the level of testing in the industry as testing as an integral part of code development.},
booktitle = {Proceedings of the 2003 ACM Symposium on Applied Computing},
pages = {1135–1139},
numpages = {5},
keywords = {test driven development, software experimentation, software engineering, extreme programming, agile methodologies},
location = {Melbourne, Florida},
series = {SAC '03}
}

@inproceedings{10.1145/3241403.3241440,
author = {Mishra, Mayank and Kunde, Shruti and Nambiar, Manoj},
title = {Cracking the monolith: challenges in data transitioning to cloud native architectures},
year = {2018},
isbn = {9781450364836},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3241403.3241440},
doi = {10.1145/3241403.3241440},
abstract = {Application modernization is the process of transforming a monolithic application to cloud native. This involves gradually building a new application consisting of microservices, and running it in conjunction with the monolithic application. Over a period of time, the functionality of the monolith shrinks drastically or transforms into yet another microservice. Solution architects are often faced with the task of ensuring this smooth transition - from monolith to cloud native. For large and complex monoliths, this task is non-trivial as the code base grows non-linearly over a period of time, thus posing multiple challenges.The complexity of a monolith is moved to the interconnections between microservices, leading to multiple points of failure. This also has implications on scalability and the need for replication. One of the biggest challenges is to maintain data consistency and statefulness across the services and enable a smooth transition of the data. Tracing performance issues also becomes complex as a single transaction can encompass multiple service calls, along with increased operational complexity due to increased demand of managing services.In this paper, we envision an automated approach that will enable a smooth transition from the monolith to microservices, thus alleviating the complexities faced by a solution architect. Our system leverages the existing data schema along with details obtained using profiling tools (in production or development environment), to understand the data flow and access patterns and use this information to to propose functional modules (microservices).},
booktitle = {Proceedings of the 12th European Conference on Software Architecture: Companion Proceedings},
articleno = {35},
numpages = {4},
keywords = {monolith, cloud native, architecture, SLA},
location = {Madrid, Spain},
series = {ECSA '18}
}


@Article{sym14091824,
AUTHOR = {Milić, Miloš and Makajić-Nikolić, Dragana},
TITLE = {Development of a Quality-Based Model for Software Architecture Optimization: A Case Study of Monolith and Microservice Architectures},
JOURNAL = {Symmetry},
VOLUME = {14},
YEAR = {2022},
NUMBER = {9},
ARTICLE-NUMBER = {1824},
URL = {https://www.mdpi.com/2073-8994/14/9/1824},
ISSN = {2073-8994},
DOI = {10.3390/sym14091824}
}


@ARTICLE{9717259,
  author={Blinowski, Grzegorz and Ojdowska, Anna and Przybyłek, Adam},
  journal={IEEE Access},
  title={Monolithic vs. Microservice Architecture: A Performance and Scalability Evaluation},
  year={2022},
  volume={10},
  number={},
  pages={20357-20374},
  keywords={Microservice architectures;Computer architecture;Scalability;Business;Companies;Java;Complexity theory;Software architecture;microservices;monolith;software measurement;benchmarking;performance;scalability;cloud computing;Azure},
  doi={10.1109/ACCESS.2022.3152803}}

@INPROCEEDINGS{10638895,
  author={Abdulhakeem, Alaa and Saeed, Sabri and Mustafa, Nada and Ibrahim, Mohammed A.M. and Al-Tayar, Basheer},
  booktitle={2024 4th International Conference on Emerging Smart Technologies and Applications (eSmarTA)},
  title={Enhancing Frontend Efficiency: Reusability and Testability in Component-Driven Development},
  year={2024},
  volume={},
  number={},
  pages={1-8},
  keywords={Measurement;Automation;Systematics;Merging;Focusing;Documentation;Robustness;Component-Driven Development;Frontend Development;Reusability;Testability;Web Components;Component Library;Design System;Stencil.js;Storybook.js},
  doi={10.1109/eSmarTA62850.2024.10638895}}

@INPROCEEDINGS{7333476,
  author={Villamizar, Mario and Garcés, Oscar and Castro, Harold and Verano, Mauricio and Salamanca, Lorena and Casallas, Rubby and Gil, Santiago},
  booktitle={2015 10th Computing Colombian Conference (10CCC)},
  title={Evaluating the monolithic and the microservice architecture pattern to deploy web applications in the cloud},
  year={2015},
  volume={},
  number={},
  pages={583-590},
  keywords={Companies;Computer architecture;Cloud computing;Service-oriented architecture;Complexity theory;cloud computing;microservices;service oriented architectures;SOA;scalable applications;infrastructure as a services;platform as a service;PaaS;IaaS;continuous delivery;software engineering;software architecture;microservice architecture},
  doi={10.1109/ColumbianCC.2015.7333476}}


@misc{SQLiteForeignKeys,
  author  = {{SQLite Team}},
  title   = {SQLite Foreign Key Support},
  url     = {https://www.sqlite.org/foreignkeys.html},
  urldate = {2025-14-03}
}

@INPROCEEDINGS{7980348,
  author={Alzahrani, Abdulrahman and Alqazzaz, Ali and Zhu, Ye and Fu, Huirong and Almashfi, Nabil},
  booktitle={2017 ieee 3rd international conference on big data security on cloud (bigdatasecurity), ieee international conference on high performance and smart computing (hpsc), and ieee international conference on intelligent data and security (ids)},
  title={Web Application Security Tools Analysis},
  year={2017},
  volume={},
  number={},
  pages={237-242},
  keywords={Tools;Cryptography;Web servers;Computer architecture;Web application;web application security;web application vulnerabilities},
  doi={10.1109/BigDataSecurity.2017.47}}


@misc{CloudSQLScaling,
  author  = {{Google Cloud}},
  title   = {Cloud SQL},
  url     = {https://cloud.google.com/sql?hl=en},
  urldate = {2025-31-03}
}


@misc{WebSocket,
  author  = {{Alexey Melnikov and Ian Fette}},
  title   = {The WebSocket Protocol},
  url     = {https://www.rfc-editor.org/rfc/rfc6455.html},
  urldate = {2025-02-04}
}

@phdthesis{Fielding,
author = {Fielding, Roy Thomas and Taylor, Richard N.},
title = {Architectural styles and the design of network-based software architectures},
year = {2000},
isbn = {0599871180},
publisher = {University of California, Irvine},
school = {University of California, Irvine},
}

@misc{MerkelDocker,
  author  = {{Dirk Merkel}},
  title   = {Docker: Lightweight Linux Containers for Consistent Development and Deployment},
  url     = {https://dl.acm.org/doi/fullHtml/10.5555/2600239.2600241},
  urldate = {2025-02-04}
}


@Inbook{Dragoni2017,
author="Dragoni, Nicola
and Giallorenzo, Saverio
and Lafuente, Alberto Lluch
and Mazzara, Manuel
and Montesi, Fabrizio
and Mustafin, Ruslan
and Safina, Larisa",
editor="Mazzara, Manuel
and Meyer, Bertrand",
title="Microservices: Yesterday, Today, and Tomorrow",
bookTitle="Present and Ulterior Software Engineering",
year="2017",
publisher="Springer International Publishing",
address="Cham",
pages="195--216",
abstract="Microservices is an architectural style inspired by service-oriented computing that has recently started gaining popularity. Before presenting the current state of the art in the field, this chapter reviews the history of software architecture, the reasons that led to the diffusion of objects and services first, and microservices later. Finally, open problems and future challenges are introduced. This survey primarily addresses newcomers to the discipline, while offering an academic viewpoint on the topic. In addition, we investigate some practical issues and point out a few potential solutions.",
isbn="978-3-319-67425-4",
doi="10.1007/978-3-319-67425-4_12",
url="https://doi.org/10.1007/978-3-319-67425-4_12"
}

@INPROCEEDINGS{9959901,
  author={Diniz-Junior, Raimundo N.V. and Figueiredo, Caio César L. and De S.Russo, Gilson and Bahiense-Junior, Marcos Roberto G. and Arbex, Mateus V.L. and Dos Santos, Lanier M. and Da Rocha, Raimundo F. and Bezerra, Renan R. and Giuntini, Felipe T.},
  booktitle={2022 XVLIII Latin American Computer Conference (CLEI)},
  title={Evaluating the performance of web rendering technologies based on JavaScript: Angular, React, and Vue},
  year={2022},
  volume={},
  number={},
  pages={1-9},
  keywords={Performance evaluation;Toy manufacturing industry;Benchmark testing;Rendering (computer graphics);Software;Libraries;Mobile applications;Web rendering frameworks;incremental and virtual DOM;front-end;React;Vue;Angular;benchmark;performance avalution;web development;JavaScript},
  doi={10.1109/CLEI56649.2022.9959901}}
